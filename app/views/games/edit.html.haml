.container-fluid
  - if  @game.officers.where.not(station: '').count == 5 && @game.ships.where(commanded: true).count == 1
    .row
      .col-sm-4.col-sm-offset-4
        .bordered.padded
          .text-center
            %h2
              = @game.ships.where(commanded: true).first.name
            %strong
              Captain
            %br
            = current_user.player.name
            %br
            = link_to('Launch', launch_game_path(id: @game.id), method: :post, class: 'btn btn-default btn-lg')

    .row
      .col-xs-8.col-xs-offset-2
        .text-center
          - if @game.points
            %h2
              = "Points: #{@game.points}"
          - if @game.points >= @settings.officer_cost
            %br
            = link_to("Trade #{@settings.officer_cost} Credits for 1 New Recruit", roll_game_officers_path(game_id: @game.id), method: :post, class: 'btn btn-default')
          - if @game.points >= @settings.ship_cost
            %br
            = link_to("Trade #{@settings.ship_cost} Credits for 1 New Ship", roll_game_officers_path(game_id: @game.id), method: :post, class: 'btn btn-default')

.container-fluid
  .row
    .col-sm-4.col-sm-offset-4
      %h3.text-center
        Crew
  .row
    .col-sm-4.col-sm-offset-1
      %h4
        Enlisted
      - @game.officers.where.not(station: '').each do |officer|
        .bordered.padded
          = render 'officers/form', officer: officer
        %br
    .col-sm-2
    .col-sm-4
      %h4
        Available
      - @game.officers.where(station: [nil, false, '']).each do |officer|
        .bordered.padded
          = render 'officers/form', officer: officer
        %br

  .row
    .col-sm-4.col-sm-offset-4
      %h3.text-center
        Ships
  .row
    .col-sm-4.col-sm-offset-1
      %h4
        Commanding
      - @game.ships.where(commanded: true).each do |ship|
        .bordered.padded
          = render 'ships/form', ship: ship
        %br
    .col-sm-2
    .col-sm-4
      %h4
        Available
      - @game.ships.where(commanded: nil).each do |ship|
        .bordered.padded
          = render 'ships/form', ship: ship
        %br
